---
apiVersion: v1
kind: Namespace
metadata:
  name: adguard
---
apiVersion: v1
kind: Service
metadata:
  name: adguard
spec:
  selector:
    app.kubernetes.io/name: adguard
  ports:
    - protocol: TCP
      port: 53
      targetPort: 53
    - protocol: UDP
      port: 53
      targetPort: 53
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adguard
  namespace: adguard
---
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
  namespace: adguard
rules:
#- apiGroups:
#  - ""
#  resources:
#  - configmaps
#  verbs:
#  - get
#  - list
#  - watch
#  - create
#  - update
#  - patch
#  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
#- apiGroups:
#  - ""
#  resources:
#  - events
#  verbs:
#  - create
#  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: adguard-leder-election
  namespace: adguard
subjects:
- kind: ServiceAccount
  name: adguard
  namespace: adguard
roleRef:
  kind: Role
  name: leader-election-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: adguard
  namespace: adguard
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: adguard # has to match .spec.template.metadata.labels
  serviceName: "adguard"
  replicas: 3
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: adguard # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 20
      containers:
      - name: adguard
        image: adguard/adguardhome:latest
        ports:
        - containerPort: 53
          protocol: TCP
          name: dns-tcp
        - containerPort: 53
          protocol: UDP
          name: dns-udp
        - containerPort: 80
          protocol: TCP
          name: http
        volumeMounts:
        - name: conf
          mountPath: /opt/adguardhome/conf
        - name: work
          mountPath: /opt/adguardhome/work
      - name: leder-election
        image: ghcr.io/markussiebert/go-and-lead:main
        imagePullPolicy: Always
        env:
        - name: GAL_IN_CLUSTER
          value: "true"
        - name: GAL_NAME
          value: "adguard-leader-election"
        - name: GAL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GAL_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: GAL_SVC
          value: adguard
        ports:
        - containerPort: 80
          protocol: TCP
          name: healthz
        livenessProbe:
          httpGet:
            path: /liveness
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 10
      serviceAccountName: adguard
  volumeClaimTemplates:
  - metadata:
      name: conf
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "topolvm"
      resources:
        requests:
          storage: 100Mi
  - metadata:
      name: work
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "topolvm"
      resources:
        requests:
          storage: 100Mi